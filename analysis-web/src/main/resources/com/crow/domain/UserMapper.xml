<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.crow.domain.UserMapper">
    <sql id="table">user</sql>
    <resultMap id="user" type="com.crow.domain.User">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="gender" column="gender"/>
        <result property="homeTeam" column="home_team"/>
        <result property="address" column="address"/>
    </resultMap>
    <resultMap id="addressData" extends="user" type="com.crow.domain.User">
        <result property="provinceAddress" column="province_address"/>
        <result property="peopleNum" column="people_num"/>
        <result property="maleNum" column="male_num"/>
        <result property="femaleNum" column="female_num"/>
        <result property="unknownNum" column="unknown_num"/>
    </resultMap>
    <resultMap id="genderData" extends="user" type="com.crow.domain.User">
        <result property="genderNum" column="gender_num"/>
    </resultMap>

    <select id="selectAllAddressesSort" resultMap="addressData">
        SELECT
        LEFT (address,2) AS province_address,
        COUNT(*) AS people_num,
        SUM(gender='男') AS male_num,
        SUM(gender='女') AS female_num,
        SUM(gender IS NULL) AS unknown_num
        FROM
        <include refid="table"/>
        WHERE address IS NOT NULL
        GROUP BY province_address
        ORDER BY people_num DESC
        LIMIT #{selectLimitNum};
    </select>

    <select id="selectAllGender" resultMap="genderData">
        SELECT
        gender,
        COUNT(*) AS gender_num
        FROM
        <include refid="table"/>
        WHERE gender IS NOT NULL
        GROUP BY gender;
    </select>

    <select id="selectAllUsersSortedByViews" resultMap="user">
        SELECT *
        FROM
        <include refid="table"/>
        WHERE views IS NOT NULL
        ORDER BY views DESC
        LIMIT #{selectLimitNum};
    </select>
</mapper>
